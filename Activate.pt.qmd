---
title: Testes em Laboratoria
format: 
  revealjs:
    theme: [simple, custom.scss]
    transition: slide
---

# Testando

O teste √© o processo de garantir a qualidade do software, revelando sua solidez a cada execu√ß√£o.

![](./img/jest-js-icon.svg){fig-alt="Logo Jest" height="200"}

**\< Laboratoria \>**

## *‚ÄúPor que a maioria dos desenvolvedores tem medo de fazer mudan√ßas cont√≠nuas em seu c√≥digo? Eles t√™m medo de quebr√°-lo! Por que eles t√™m medo de quebr√°-lo? Porque eles n√£o t√™m testes.‚Äù*

--Robert C. Martin, Clean Coder, The: A Code of Conduct for Professional Programmers

## Fun√ß√£o Soma

![](./img/funcion_suma.svg){fig-alt="Fun√ß√£o soma" height="100%"}

# Hist√≥rias de Terror <br> üëª üíÄ üëª

## Ariane 5 (1996)

O foguete Ariane 5 explodiu 40 segundos ap√≥s seu lan√ßamento devido a um erro de software. O erro foi causado pela convers√£o de um n√∫mero de 64 bits para um n√∫mero de 16 bits, resultando em um estouro de inteiro.

*Com testes, esse erro poderia ter sido detectado antes do lan√ßamento.*

## Therac-25 (1985-1987)

O Therac-25 foi um dispositivo de radioterapia usado para tratar o c√¢ncer. Devido a erros de software e falta de testes adequados, ocorreram v√°rios incidentes em que os pacientes receberam doses letais de radia√ß√£o.

*Com testes, esses erros poderiam ter sido detectados antes do dispositivo ser usado em pacientes.*

## Knight Capital Group (2012)

A empresa de negocia√ß√£o de alta frequ√™ncia Knight Capital Group perdeu US\$ 440 milh√µes em 45 minutos devido a um erro de software. O erro foi causado por uma atualiza√ß√£o de software que n√£o foi devidamente testada, levando √† execu√ß√£o de opera√ß√µes indesejadas.

*Com os testes adequados, esse erro poderia ter sido detectado antes do software ser colocado em produ√ß√£o.*

# Cultura de Testes nas Empresas

## Google

O Google √© conhecido por realizar extensos testes em seus produtos e servi√ßos, como o Google Search, Gmail e Android. Eles usam uma abordagem chamada "Testing on the Toilet" (Testes no Banheiro), onde promovem a cultura de testes entre seus desenvolvedores. <br><br>üöΩ

## Facebook

O Facebook usa uma abordagem chamada "Test-Driven Development" (Desenvolvimento Orientado por Testes) para desenvolver seus produtos. Isso significa que eles escrevem testes antes de escrever o c√≥digo, o que lhes permite garantir que o c√≥digo atenda aos requisitos antes de ser implementado.

## Amazon

A Amazon usa uma abordagem chamada "Chaos Engineering" (Engenharia do Caos) para testar a resili√™ncia de seus sistemas. Isso envolve a introdu√ß√£o de falhas em seus sistemas para ver como eles se comportam em situa√ß√µes inesperadas.

Eles seguem abordagens de desenvolvimento orientadas a testes para garantir a qualidade do software.

## Benef√≠cios de fazer Testes

|                                  |                                   |
|----------------------------------|-----------------------------------|
| Detec√ß√£o precoce de erros        | Melhoria da qualidade do software |
| Software mais confi√°vel          | Software sustent√°vel              |
| Economia de custos a longo prazo | Melhora a documenta√ß√£o do c√≥digo  |

# Tipos de Testes

*Durante o bootcamp, nos concentramos em 3 tipos de teste:*

-   **Teste Unit√°rio**
-   **Teste de Integra√ß√£o**
-   **Teste de Ponta a Ponta**

# Hora do C√≥digo

## Te vejo no *Test Camp!*

### Junte-se ao canal:

-   *#test-camp*

### Otras referencias:

- [Tests Unitarios](./UnitTest.pt.qmd)
- [Bootcamp Book](https://coda.io/d/Bootcamp-Book_dUrlCH0OK3j/Test-Camp_sujwe#_luLVH)
- [Baseline Docs](./baseline_docs.pt.md)
- Esta documentaci√≥n: <br> [https://github.com/Laboratoria/test-camp-docs](https://github.com/Laboratoria/test-camp-docs)

# Obrigado! <br> Thank you! <br> Gracias

::: {.r-fit-text .white}
\>\>
:::